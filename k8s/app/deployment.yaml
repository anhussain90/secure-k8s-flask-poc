apiVersion: apps/v1
kind: Deployment
metadata:
  name: secure-flask-poc
  labels:
    app: secure-flask-poc
spec:
  replicas: 2
  selector:
    matchLabels:
      app: secure-flask-poc
  template:
    metadata:
      labels:
        app: secure-flask-poc
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: flask-app
        image: IMAGE_PLACEHOLDER
        ports:
        - containerPort: 5000
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        env:
        - name: FLASK_ENV
          value: "production"
---
apiVersion: v1
kind: Service
metadata:
  name: secure-flask-poc
  labels:
    app: secure-flask-poc
spec:
  selector:
    app: secure-flask-poc
  ports:
  - port: 80
    targetPort: 5000
  type: ClusterIP