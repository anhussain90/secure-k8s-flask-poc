apiVersion: apps/v1
kind: Deployment
metadata:
  name: secure-flask-poc
  namespace: default
  labels:
    app: secure-flask-poc
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: secure-flask-poc
  template:
    metadata:
      labels:
        app: secure-flask-poc
        version: v1
      annotations:
        # Security annotations
        container.apparmor.security.beta.kubernetes.io/secure-flask-poc: runtime/default
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: secure-flask-poc
          image: IMAGE_PLACEHOLDER # Will be replaced by CI/CD
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
            runAsGroup: 65532
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          env:
            - name: PORT
              value: "8080"
            - name: APP_VERSION
              value: "1.0.0"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
      automountServiceAccountToken: false
