name: Terraform

on:
  push:
    branches: [main, develop]
    paths:
      - 'infra/terraform/**'
  pull_request:
    branches: [main]
    paths:
      - 'infra/terraform/**'

permissions:
  contents: read
  id-token: write
  security-events: write

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.13.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_TERRAFORM_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Format Check
        run: terraform fmt -check -recursive infra/terraform/

      - name: Terraform Init
        working-directory: infra/terraform/environments/poc
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_BACKEND_BUCKET }}" \
            -backend-config="dynamodb_table=${{ secrets.TF_BACKEND_DYNAMODB_TABLE }}" \
            -backend-config="region=${{ secrets.TF_BACKEND_REGION }}"

      - name: Terraform Validate
        working-directory: infra/terraform/environments/poc
        run: terraform validate

      - name: Run Trivy Security Scan
        uses: aquasecurity/trivy-action@0.29.0
        with:
          scan-type: 'config'
          scan-ref: 'infra/terraform/'
          format: 'sarif'
          output: 'trivy-terraform-results.sarif'
          severity: 'MEDIUM,HIGH,CRITICAL'
          exit-code: 0

      - name: Upload Trivy Scan Results
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-terraform-results.sarif'

      - name: Terraform Plan
        working-directory: infra/terraform/environments/poc
        run: terraform plan -no-color
        env:
          TF_VAR_github_repository: ${{ github.repository }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: infra/terraform/environments/poc
        run: terraform apply -auto-approve -no-color
        env:
          TF_VAR_github_repository: ${{ github.repository }}